# See doc/docker/README.md or https://github.com/instructure/canvas-lms/tree/master/doc/docker
version: '2.3'
services:
  traefik:
    image: traefik:v2.4
    depends_on:
      - web
    command:
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
    ports:
      - 80:80
      - 443:443

  web: &WEB
    build:
      context: .
    links:
      - postgres
      - redis
    environment:
      POSTGRES_PASSWORD: sekret
      ADDITIONAL_ALLOWED_HOSTS: REPLACE_ME_WITH_HOST_DNS
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.rule=Host(`REPLACE_ME_WITH_HOST_DNS`)"
      - "traefik.http.routers.web.tls.certresolver=myresolver"

  jobs:
    build:
      context: .
    links:
      - postgres
      - redis
    environment:
      POSTGRES_PASSWORD: sekret
    command: bundle exec script/delayed_job run

  postgres:
    build: ./docker-compose/postgres
    environment:
      POSTGRES_PASSWORD: sekret

  redis:
    image: redis:alpine
volumes:
  letsencrypt:
