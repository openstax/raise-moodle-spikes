version: "3.8"
services:
  moodle:
    build:
      context: .
      dockerfile: moodle/Dockerfile
      target: ${MOODLE_TARGET:-dev}
    volumes: &moodlevolumes
      - moodledata:/var/www/moodledata
      - ./plugins/events:/var/www/html/admin/tool/events
      - ./plugins/study:/var/www/html/mod/study
      - ./plugins/content:/var/www/html/filter/content
      - ./plugins/direct_events_plugin:/var/www/html/local/direct
      - .:/repo
    networks:
      - raisemoodle
    environment: &moodleenv
      MOODLE_DOCKER_DBHOST: postgres
      MOODLE_DOCKER_DBNAME: $POSTGRES_DB
      MOODLE_DOCKER_DBUSER: $POSTGRES_USER
      MOODLE_DOCKER_DBPASS: $POSTGRES_PASSWORD
      MOODLE_DOCKER_WWWROOT: http://localhost:8000
      MOODLE_DOCKER_DATAROOT: /var/www/moodledata
      MOODLE_DOCKER_SMTPHOST: mailhog:1025
      EVENTSAPI_SERVER: eventsapi
    ports:
      - 8000:80
    depends_on:
      - postgres
    extra_hosts:
      - "host.docker.internal:host-gateway"
  cron:
    build:
      context: .
      dockerfile: moodle/Dockerfile
    command: /bin/bash -c "printenv | grep MOODLE > /etc/environment; cron -f"
    volumes: *moodlevolumes
    networks:
      - raisemoodle
    environment: *moodleenv
    depends_on:
      - moodle
  eventsapi:
    build:
      context: services/eventsapi
    networks:
      - raisemoodle
    ports:
      - 8888:80 # Only exposed for developer convenience
    environment:
      - EVENTS_S3_BUCKET
      - EVENTS_S3_PREFIX
  contentapi:
    build:
      context: services/contentapi
    volumes:
      - ./services/contentapi/html:/html
    networks:
      - raisemoodle
    ports:
      - 8800:80
  postgres:
    image: "postgres:13"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - raisemoodle
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
  mailhog:
    image: mailhog/mailhog
    networks:
      - raisemoodle
    ports:
      - 8025:8025
networks:
  raisemoodle:
volumes:
  pgdata:
  moodledata:
