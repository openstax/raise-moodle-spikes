apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: raise-spikes-enclave-
spec:
  entrypoint: flow
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: gp2
      resources:
        requests:
          storage: 1Gi
  templates:
  - name: setup
    serviceAccountName: raise-developer
    container:
      image: rnathuji/raise-spikes-enclave-setup
      command:
          - "bash"
          - "-cxe"
          - |
            mkdir /data/enclave-input
            mkdir /data/enclave-output
            python ./compile_models.py raise-moodle-spikes enclave-spike-mock-data raise-moodle-spikes enclave-spike-mock-data/enclave_mock_raw_oneroster_data_clean.zip
      volumeMounts:
      - name: workdir
        mountPath: /data
      env:
        - name: CSV_OUTPUT_DIR
          value: /data/enclave-input
  - name: analyze
    serviceAccountName: raise-developer
    container:
      image: rnathuji/raise-spikes-enclave-analyzer
      command: ["Rscript", "./fake_script.R"]
      args: []
      volumeMounts:
      - name: workdir
        mountPath: /data
      env:
        - name: DATA_INPUT_DIR
          value: /data/enclave-input
        - name: RESULT_OUTPUT_DIR
          value: /data/enclave-output
    metadata:
      labels:
        role: enclave
  - name: postprocess
    serviceAccountName: raise-developer
    container:
      image: rnathuji/raise-spikes-enclave-postprocessor
      command:
          - "bash"
          - "-cxe"
          - |
            aws s3 cp --recursive /data/enclave-output/ s3://raise-moodle-spikes/enclave-spike-mock-data/demos/output/
      volumeMounts:
      - name: workdir
        mountPath: /data
      env:
        - name: RESULT_DIR
          value: /data/enclave-output
  - name: flow
    dag:
      tasks:
      - name: setup
        template: setup
      - name: analyze
        dependencies: [setup]
        template: analyze
      - name: postprocess
        dependencies: [analyze]
        template: postprocess
